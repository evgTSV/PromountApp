services:
  web:
    build:
      context: ./PromountApp/PromountApp.Api
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "80:8080"
      - "8080:8080"
    env_file:
      - .env
    networks:
      - mynetwork
  
  bot:
    build:
      context: ./PromountApp/PromountApp.Bot
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "8081:8080"
    env_file:
      - .env
    networks:
      - mynetwork
      
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: promountDB
    ports:
      - "5432:5432"
    networks:
      - mynetwork
      
  redis:
    image: redis:latest
    restart: always
    environment:
      REDIS_URL: redis:6379
    ports:
      - "6379:6379"
    networks:
      - mynetwork
        
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: always
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge